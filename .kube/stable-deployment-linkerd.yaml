apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: website
    app.kubernetes.io/part-of: biodatadb
    app.kubernetes.io/version: v0.1.2
  name: biodatadbuiingressservicewebsite
  namespace: datahandler
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: website
      app.kubernetes.io/part-of: biodatadb
      app.kubernetes.io/version: v0.1.2
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app.kubernetes.io/name: website
        app.kubernetes.io/part-of: biodatadb
        app.kubernetes.io/version: v0.1.2
    spec:
      containers:
        - env:
          - name: csrfsecret
            valueFrom:
              secretKeyRef:
                key: csrf-secret
                name: frontend-secrets
          - name: cookiesecret
            valueFrom:
              secretKeyRef:
                key: cookie-secrets
                name: frontend-secrets
          - name: Oauth2ClientSecret
            valueFrom:
              secretKeyRef:
                key: secret
                name: oauth2client
          - name: APIKey
            valueFrom:
              secretKeyRef:
                key: UploaderAPIKey
                name: api-key
          image: harbor.harbor1.ingress.rancher.computational.bio/biodatadb/website:v0.1.2
          volumeMounts:
            - name: config
              mountPath: "/config"
              readOnly: true
          name: projecthandler
          ports:
          - containerPort: 8080
      volumes:
        - name: config
          configMap:
            name: biodatadb-ui-stable-config
      imagePullSecrets:
      - name: harbor1
---
apiVersion: v1
kind: Service
metadata:
  name: biodatadbuiservice
  namespace: datahandler
spec:
  selector:
    app.kubernetes.io/name: website
    app.kubernetes.io/part-of: biodatadb
    app.kubernetes.io/version: v0.1.2
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: biodatadbuiingress
  namespace: datahandler
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
spec:
  rules:
  - host: ui.biodatadb.ingress.rancher2.computational.bio
    http:
      paths:
      - backend:
          serviceName: biodatadbuiservice
          servicePort: 8080
        path: /
  tls: # < placing a host in the TLS config will indicate a certificate should be created
  - hosts:
    - ui.biodatadb.ingress.rancher2.computational.bio
    secretName: ui-biodatadb-stable-private-cert # < cert-manager will store the created certificate in this secret.
---
